# Based on https://docs.github.com/en/actions/publishing-packages/publishing-docker-images

name: Publish Docker image

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
    paths:
      - '.github/workflows/docker-publish.yml'
      - 'Dockerfile'
      - 'Manifest.toml'
      - 'Project.toml'
      - 'notebook.jl'
  pull_request:
    branches: [ "main" ]
    paths:
      - '.github/workflows/docker-publish.yml'
      - 'Dockerfile'
      - 'Manifest.toml'
      - 'Project.toml'
      - 'notebook.jl'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: always.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push-image:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Docker is terrible and doesn't like uppercase image names.
      - name: Lowercase image name
        run: |
          IMAGE_NAME=$(echo $IMAGE_NAME | tr A-Z a-z)
          echo "IMAGE_NAME=${IMAGE_NAME}" >> "${GITHUB_ENV}"

      # Login against the registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          # cache-to: type=gha,mode=max

      # This step generates an artifact attestation for the image, which is an
      # unforgeable statement about where and how it was built. It increases
      # supply chain security for people who consume the image.
      # https://github.com/actions/attest-build-provenance
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.build-and-push.outputs.digest }}
          push-to-registry: ${{ github.event_name != 'pull_request' }}
